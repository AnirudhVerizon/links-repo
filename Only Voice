private fun startSpeechRecognition() {
            val speechRecognizer = SpeechRecognizer.createSpeechRecognizer(context)
            val intent = Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH).apply {
                putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM)
                putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault())
                putExtra(RecognizerIntent.EXTRA_PROMPT, "Speak now")
            }

            speechRecognizer.setRecognitionListener(object : RecognitionListener {
                override fun onReadyForSpeech(params: Bundle?) {
                    // Ready to receive speech
                }

                override fun onBeginningOfSpeech() {
                    // User has started speaking
                }

                override fun onRmsChanged(rmsdB: Float) {
                    // Sound level changed
                }

                override fun onBufferReceived(buffer: ByteArray?) {
                    // Buffer received
                }

                override fun onEndOfSpeech() {
                    // User has finished speaking
                }

                override fun onError(error: Int) {
                    // Handle error
                }

                override fun onResults(results: Bundle?) {
                    results?.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION)?.let { result ->
                        val spokenText = result[0]
                        // Log the spoken text
                        Log.d("SpeechRecognizerResult", "Spoken Text: $spokenText")
                      }

                    }
                }

                override fun onPartialResults(partialResults: Bundle?) {
                    // Handle partial results
                }

                override fun onEvent(eventType: Int, params: Bundle?) {
                    // Handle events
                }
            })

            try {
                startActivityForResult(intent, 100)
            } catch (e: ActivityNotFoundException) {
                // Handle the error (Toast, log, etc.)
            }
        }
